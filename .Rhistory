print(mean_parameters_results)
#######NOW for the posterior parameters#################################
# we extract the posterior parameter values and growwth rates
vero_post <- posterior_parameters(model = vero_model,
s = si,
g = gi)
trcy_post <- posterior_parameters(model = trcy_model,
s = sj,
g = gj)
# we check if they are the same size
num_posterior<- identical(nrow(vero_post),nrow(trcy_post))
if(!num_posterior){
warning("Posterior distributions are not the same length")
}else{
print("working with the posterior distrubution")
#just to work with them, should comment out this part aftewards
vero_post<-vero_post[sample(nrow(vero_post), 1000), ]
trcy_post<-trcy_post[sample(nrow(trcy_post), 1000), ]
#to iterate over rows without using a loop
x <- seq(1,nrow(vero_post),1) %>% as.list()
posterior_parameters_results<-lapply(x,function(rows,gi,gj,rconstraints, Nupper){
alpha  <- alpha_matrix(
vero_row = vero_post[rows, ],
trcy_row = trcy_post[rows, ],
gi = gi,
gj = gj,
env = env )
if (env) {
r1 <- vero_post$env_growth[rows]
r2 <- trcy_post$env_growth[rows]
} else{
r1 <- vero_post$growth[rows]
r2 <- trcy_post$growth[rows]
}
r_post <- c(r1,r2)
#we determine R for every alpha matrix
R_post <- determine_radius(alpha = alpha,
Ni_max = Ni_max,
Nj_max = Nj_max)
omega_post <- integrate_radii(alpha = alpha,
R = R_post,
rconstraints = rconstraints,
Nupper = Nupper )
#Saavedras aproximation
omega_post_SA <- Omega_SA(alpha = alpha)
centroid_post_SA <- r_centroid(alpha=alpha)
theta_post_SA <- theta(r_c = centroid_post_SA,
r = r_post)
#center of the domain
center_post <- r_feasible(alpha = alpha,
rconstraints = rconstraints,
Nupper = Nupper,
R_max = R_post,
make_plot = FALSE)
#are our growth rates feasible?
feasibility_post <- check_feasibility(r= r_post,
alpha = alpha,
rconstraints = rconstraints,
Nupper = Nupper )
#how far away are they from the center
distance_post <- calculate_distance(center = center_post,
r = r_post)
theta_post <- theta(r_c = center_post,
r = r_post)
#all togethe
post_results <- data.frame(
"Omega_saaveda"= omega_post_SA,
"theta_saavedra"= theta_post_SA,
"Omega"= omega_post,
"distance"= distance_post,
"theta" = theta_post,
"feasibility" = feasibility_post,
"Radius" = R_post)
print(x)
return(post_results)
}, gi = gi,
gj = gj,
rconstraints = rconstraints,
Nupper = Nupper)
posterior_parameters_results <- do.call(rbind, posterior_parameters_results)
all_results <- cbind(mean_parameters_results, posterior_parameters_results)
all_results[,"vero_model"] <- vero_model$name
all_results[,"trcy_model"] <- trcy_model$name
# print(all_results)
file <- paste0(name,".RDS")
# print(file)
saveRDS(object = all_results,file = paste0(name,".RDS"))
return(all_results)
}
}
gi<-.372
si<-.556
gj<-.258
sj<-.033
ptm <- proc.time()
test <- posterior_feasibility(vero_model = vero_bh_multispecies_poisson.rds,
trcy_model = trcy_bh_multispecies_poisson.rds,
si = si,
gi = gi,
Ni_max =1000,
sj = sj,
gj =gj,
Nj_max =  1000,
env = FALSE,
make_plot = TRUE )
proc.time() - ptm
install.packages("staplr")
results_sunny_feb21 <- readRDS("~/bayesian_competition/results_sunny_feb21.RDS")
head(results_sunny_feb21)
library(ggplot2)
library(tidyverse)
source("code/gg_theme.R")
mod <- results_sunny_feb21
head(mod)
mod <- mod %>% mutate (distance_norm = ifelse(feasibility==1,1,-1))
head(mod)
tail(mod)
unique(mod$distance_norm)
mod <- mod %>% mutate (distance_norm = ifelse(feasibility==1,1,-1)) %>%
mutate(distance_norm = distance_growth * distance_norm)
head(mod)
a <- TRUE
a ==1
mod <- mod %>% mutate (distance_norm = ifelse(feasibility==1,1,-1)) %>%
mutate(distance_norm = distance_growth * distance_norm) %>%
mutate(distance_mean_norm =  ifelse(feasibility_mean==1,1,-1) ) %>%
mutate( distance_mean_norm = distance_mean_growth * distance_mean_norm)
head(mod)
col1 <- rethinking::col.alpha("mediumseagreen", .3)
col2 <- rethinking::col.alpha("grey50",.9)
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega,
y = distance_norm,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = distance_mean_norm
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = distance_mean_growth
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
unfeasible <- mod %>% filter(feasibility == 0)
unfeasible
plot(unfeasible$Omega_saaveda, unfeasible$Omega)
unfeasible <- unfeasible %>% unite(col = c(vero_model, trcy_model), sep="_")
unfeasible <- unfeasible %>% unite(col = c(vero_model, trcy_model))
unfeasible <- unfeasible %>% unite("model_combo",col = c(vero_model, trcy_model))
rlang::last_error()
unite(unfeasible,"mode"lcol = c(vero_model, trcy_model))
unite(unfeasible,"mode",lcol = c(vero_model, trcy_model))
unite(unfeasible,"mode",col = c(vero_model, trcy_model))
?unite
unite(unfeasible,"mode",col = c(vero_model, trcy_model), sep = "_")
unite(unfeasible, vero_model:trcy_model,col = "model_combo", sep = "_")
unfeasible <- unfeasible %>% unite(vero_model:trcy_model,col = "model_combo", sep = "_")
head(unfeasible)
ggplot(unfeasible) +
geom_point(aes(x=Omega_saaveda,
y= Omega,
col=model_combo))
ggplot(unfeasible) +
geom_point(aes(x=Omega_saaveda,
y= Omega,
col=model_combo))+
theme_alba +
geom_abline(slope = 1)
ggplot(unfeasible) +
geom_point(aes(x=Omega_saaveda,
y= Omega,
col=model_combo))+
theme_alba +
geom_abline(slope = 1, intercept = 0)
head(unfeasible)
ggplot(unfeasible) +
geom_point(aes(x=theta_saavedra,
y= distance_growth,
col=model_combo))+
theme_alba +
geom_abline(slope = 1, intercept = 0)
ggplot(mod) +
geom_point(aes(x=theta_saavedra,
y= distance_norm,
col=model_combo))+
theme_alba +
geom_abline(slope = 1, intercept = 0)
mod <- mod %>% unite(vero_model:trcy_model,col = "model_combo", sep = "_")
ggplot(mod) +
geom_point(aes(x=theta_saavedra,
y= distance_norm,
col=model_combo))+
theme_alba +
geom_abline(slope = 1, intercept = 0)
ggplot(mod) +
geom_point(aes(x=theta_saavedra,
y= distance_norm,
col=model_combo))+
theme_alba +
geom_abline(slope = 0, intercept = 0)
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega_saaveda,
y = theta_saavedra,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saavedra,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
results_sunny_feb21 <- readRDS("~/bayesian_competition/results_sunny_feb21.RDS")
mod <- readRDS("~/bayesian_competition/results_sunny_feb21.RDS")
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega_saaveda,
y = theta_saavedra,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saavedra,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
head(mod)
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega_saaveda,
y = theta_saavedra,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saaveda,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
head(mod)
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saaveda,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega,
y = distance_center,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saaveda,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
head(mod)
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega,
y = Radius,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saaveda,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega_saaveda,
y = Omega,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saaveda,
y = theta_mean_saavedra
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = Omega_saaveda,
y = Omega,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean_saaveda,
y = Omega_mean
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = theta_saaveda,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = theta_mean_saavedra,
y = distance_mean_growth
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
integration <- ggplot(mod) +
geom_point(
mapping = aes(
x = theta_saavedra,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = theta_mean_saavedra,
y = distance_mean_growth
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
source("code/read_models.R")
source("code/integration_toolbox.R")
source("code/model_toolbox.R")
source("code/determine_radius.R")
source("code/determine_boundary.R")
source("code/read_models.R")
source("code/integration_toolbox.R")
source("code/model_toolbox.R")
source("code/determine_radius.R")
source("code/determine_boundary.R")
source("code/read_models.R")
source("code/integration_toolbox.R")
source("code/model_toolbox.R")
source("code/determine_radius.R")
source("code/determine_boundary.R")
source("code/integration_toolbox.R")
source("code/model_toolbox.R")
source("code/determine_radius.R")
source("code/determine_boundary.R")
gi<-.372
si<-.556
gj<-.258
sj<-.033
ptm <- proc.time()
test_2<- posterior_feasibility(vero_model = vero_lv_multispecies_poisson.rds,
trcy_model = trcy_bh_multispecies_poisson.rds,
si = si,
gi = gi,
sj = sj,
gj = gj,
Ni = 1e4,
Nj = 1e4,
env = FALSE,
make_plot = TRUE)
proc.time() - ptm
install.packages(c("polylabelr", "SpatialGraph"))
source("code/read_models.R")
source("code/integration_toolbox.R")
source("code/model_toolbox.R")
source("code/determine_radius.R")
source("code/determine_boundary.R")
gi<-.372
si<-.556
gj<-.258
sj<-.033
ptm <- proc.time()
test_2<- posterior_feasibility(vero_model = vero_lv_multispecies_poisson.rds,
trcy_model = trcy_bh_multispecies_poisson.rds,
si = si,
gi = gi,
sj = sj,
gj = gj,
Ni = 1e4,
Nj = 1e4,
env = FALSE,
make_plot = TRUE)
proc.time() - ptm
test_2
integration <- ggplot(test_2) +
geom_point(
mapping = aes(
x = Omega,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = distance_mean_growth
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
library(ggplot2)
library(tidyverse)
source("code/gg_theme.R")
integration <- ggplot(test_2) +
geom_point(
mapping = aes(
x = Omega,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = distance_mean_growth
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
col1 <- rethinking::col.alpha("mediumseagreen", .3)
col2 <- rethinking::col.alpha("grey50",.9)
integration <- ggplot(test_2) +
geom_point(
mapping = aes(
x = Omega,
y = distance_growth,
col = as.factor(feasibility)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = distance_mean_growth
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
facet_grid(trcy_model~vero_model)
integration
test_2
plot(test_2$Omega,test_2$distance_center)
saveRDS(test_2, file = test_posterior.RDS)
saveRDS(test_2, file = "test_posterior.RDS")
