si<-.556
gj<-.258
sj<-.033
params_vero<-fixed_model(vero_model)
params_trcy<-fixed_model(trcy_model)
#aii #alphaij
#aji #alphajj
alpha<-matrix(c(params_vero$alphaii_Intercept,params_trcy$alphaji_Intercept,params_vero$alphaij_Intercept,params_trcy$alphajj_Intercept),ncol = 2,nrow=2)
omega<-Omega(alpha)
#this has to change if you change models!
r1<-bev_growth(si,gi,params_vero$lambdai_Intercept)
r2<-bev_growth(sj,gj,params_trcy$lambdaj_Intercept)
#projection_2sp(alpha,r1,r2,titulo)
feasibility<-test_feasibility(alpha,c(r1,r2))
theta      <- theta(alpha,c(r1,r2))
growth     <- r2/r1
return(c(omega,feasibility,theta,growth))
}
fixed_coexistence<-function(vero_model,trcy_model,titulo){
gi<-.372
si<-.556
gj<-.258
sj<-.033
params_vero<-fixed_model(vero_model)
params_trcy<-fixed_model(trcy_model)
#aii #alphaij
#aji #alphajj
alpha<-matrix(c(params_vero$alphaii_Intercept,params_trcy$alphaji_Intercept,params_vero$alphaij_Intercept,params_trcy$alphajj_Intercept),ncol = 2,nrow=2)
omega<-Omega(alpha)
#this has to change if you change models!
r1<-bev_growth(si,gi,params_vero$lambdai_Intercept)
r2<-bev_growth(sj,gj,params_trcy$lambdaj_Intercept)
#projection_2sp(alpha,r1,r2,titulo)
feasibility<-test_feasibility(alpha,c(r1,r2))
theta      <- theta(alpha,c(r1,r2))
growth     <- r2/r1
return(c(omega,feasibility,theta,growth))
}
fixed_coexistence(BEV_vero,BEV_trcy)
fixed_feasibility<-function(posterior_feasibility){
average <- apply(posterior_feasibility,2,mean)
median  <- apply(posterior_feasibility,2,median)
return(c(average,median))
}
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
source("code/model_toolbox.R")
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
fixed_feasibility(veroBEV_trcyBEV)
vero_post<-BEV_vero
trcy_post<-BEV_trcy
vero_model<-BEV_vero
trcy_model<-BEV_trcy
#extract the posterior distribution of alphas
vero_post<-posterior_samples(vero_model)
trcy_post<-posterior_samples(trcy_model)
vero_post
head(vero_post)
mean_vero<-apply(vero_post,2,mean)
mean_vero
BEV_vero
vero_fixed<-fixed_model(BEV_vero)
vero_fixed
mean_vero
#toolbox for example BEV competition
require(brms)
require(tidyverse)
require(ggplot2)
require(rethinking)
source("code/feasibility_toolbox.R")
source("code/extract_params.R")
source("code/growth_rates.R")
source("code/model_growth_rates.R")
mean(vero_growth$BV)
bev_growth(si,gi,vero_fixed$lambdai_Intercept)
vero_model
vero_growth
trcy_growth
v1<-BV
v1<-"BV"
v2<- "BV"
params_vero<-fixed_model(vero_model)
params_trcy<-fixed_model(trcy_model)
#aii #alphaij
#aji #alphajj
alpha<-matrix(c(params_vero$alphaii_Intercept,params_trcy$alphaji_Intercept,params_vero$alphaij_Intercept,params_trcy$alphajj_Intercept),ncol = 2,nrow=2)
omega_mean<-Omega(alpha)
#this has to change if you change models!
r1<-mean(vero_growth[,v1])
r2<-mean(trcy_growth[,v2])
vero_growth[,v1]
class(vero_growth[,v1])
r1<-mean(vero_growth[[,v1]])
r1
class(vero_growth[[,v1]])
r_vero <- vero_growth[[,v1]]
r_vero <- vero_growth[,v1]
r_vero
r_vero
[[r_vero]]
r_vero[[]]
r_vero[[1]]
r_vero <- vero_growth[,v1]
r_trcy <- trcy_growth[,v2]
r1<-mean(r_vero[[1]])
r2<-mean(r_trcy[[1]])
r1
r2
feasibility_mean<-test_feasibility(alpha,c(r1,r2))
feasibility_mean
posterior_feasibility<-function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
gi<-.372
si<-.556
gj<-.258
sj<-.033
#extract the posterior distribution of alphas
vero_post<-posterior_samples(vero_model)
trcy_post<-posterior_samples(trcy_model)
#that should correspond to the same posterior of the _growth models
r_vero<-vero_growth[,v1]
r_trcy<-trcy_growth[,v2]
num_posterior<- identical(nrow(vero_post),nrow(trcy_post))
if(num_posterior){
omega_results       <-c()
feasibility_results <-c()
growth_results      <-c()
theta_results       <-c()
for( i in 1:nrow(vero_post)){
#we get the corresponding posterior values
alpha  <- get_alphas(vero_post[i,],trcy_post[i,])
r1     <- r_vero[[i,1]]
r2     <- r_trcy[[i,1]]
growth <-r1/r2
#And estimate the feasability domain
omega       <-Omega(alpha)
feasibility <-test_feasibility(alpha,c(r2,r1))
theta       <-theta(alpha,c(r2,r1))
#we save it
omega_results       <-c(omega_results,omega)
feasibility_results <-c(feasibility_results, feasibility)
growth_results      <-c(growth_results,growth)
theta_results       <-c(theta_results,theta)
}
pp<- cbind(omega_results,feasibility_results, growth_results,theta_results)
pp<-as.data.frame(pp)
return(pp)
}else{warning("Posterior distributions are not the same length")}
}
source("code/model_toolbox.R")
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
fixed_coexistence(BEV_vero,BEV_trcy,"Beverton-Holt ")
fixed_coexistence(RC_vero,RC_trcy,"Ricker")
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
coexistence_veroBEV_trcyBEV         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
veroBEV_trcyBEV$feasibility_results <- as.factor(veroBEV_trcyBEV$feasibility_results)
BV<-ggplot(veroBEV_trcyBEV) +
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
# xlim(0,0.2)  +
#ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.15, y=40, label=coexistence_veroBEV_trcyBEV, size=8)+
theme_classic()
BV
source("code/model_toolbox.R")
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
fixed_coexistence(BEV_vero,BEV_trcy,"Beverton-Holt ")
fixed_coexistence(RC_vero,RC_trcy,"Ricker")
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
coexistence_veroBEV_trcyBEV         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
veroBEV_trcyBEV$feasibility_results <- as.factor(veroBEV_trcyBEV$feasibility_results)
BV<-ggplot(veroBEV_trcyBEV) +
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
# xlim(0,0.2)  +
#ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.15, y=40, label=coexistence_veroBEV_trcyBEV, size=8)+
theme_classic()
BV
posterior_feasibility<-function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
gi<-.372
si<-.556
gj<-.258
sj<-.033
#extract the posterior distribution of alphas
vero_post<-posterior_samples(vero_model)
trcy_post<-posterior_samples(trcy_model)
#that should correspond to the same posterior of the _growth models
r_vero<-vero_growth[,v1]
r_trcy<-trcy_growth[,v2]
num_posterior<- identical(nrow(vero_post),nrow(trcy_post))
if(num_posterior){
omega_results       <-c()
feasibility_results <-c()
growth_results      <-c()
theta_results       <-c()
for( i in 1:nrow(vero_post)){
#we get the corresponding posterior values
alpha  <- get_alphas(vero_post[i,],trcy_post[i,])
r1     <- r_vero[[i,1]]
r2     <- r_trcy[[i,1]]
growth <-r1/r2
#And estimate the feasability domain
omega       <-Omega(alpha)
feasibility <-test_feasibility(alpha,c(r1,r2))
theta       <-theta(alpha,c(r1,r2))
#we save it
omega_results       <-c(omega_results,omega)
feasibility_results <-c(feasibility_results, feasibility)
growth_results      <-c(growth_results,growth)
theta_results       <-c(theta_results,theta)
}
pp<- cbind(omega_results,feasibility_results, growth_results,theta_results)
pp<-as.data.frame(pp)
return(pp)
}else{warning("Posterior distributions are not the same length")}
}
source("code/model_toolbox.R")
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
#fixed_coexistence(BEV_vero,BEV_trcy,"Beverton-Holt ")
#fixed_coexistence(RC_vero,RC_trcy,"Ricker")
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
coexistence_veroBEV_trcyBEV         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
veroBEV_trcyBEV$feasibility_results <- as.factor(veroBEV_trcyBEV$feasibility_results)
BV<-ggplot(veroBEV_trcyBEV) +
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
# xlim(0,0.2)  +
#ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.15, y=40, label=coexistence_veroBEV_trcyBEV, size=8)+
theme_classic()
BV
fixed_feasibility<-function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
params_vero<-fixed_model(vero_model)
params_trcy<-fixed_model(trcy_model)
#aii #alphaij
#aji #alphajj
alpha<-matrix(c(params_vero$alphaii_Intercept,params_trcy$alphaji_Intercept,params_vero$alphaij_Intercept,params_trcy$alphajj_Intercept),ncol = 2,nrow=2)
omega<-Omega(alpha)
#this has to change if you change models!
r_vero <- vero_growth[,v1]
r_trcy <- trcy_growth[,v2]
r1<-mean(r_vero[[1]])
r2<-mean(r_trcy[[1]])
feasibility <-test_feasibility(alpha,c(r1,r2))
growth      <-r2/r1
theta       <-theta(alpha,c(r1,r2))
return(omega,feasibility,growth,theta)
}
fixed_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
fixed_feasibility<-function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
params_vero<-fixed_model(vero_model)
params_trcy<-fixed_model(trcy_model)
#aii #alphaij
#aji #alphajj
alpha<-matrix(c(params_vero$alphaii_Intercept,params_trcy$alphaji_Intercept,params_vero$alphaij_Intercept,params_trcy$alphajj_Intercept),ncol = 2,nrow=2)
omega<-Omega(alpha)
#this has to change if you change models!
r_vero <- vero_growth[,v1]
r_trcy <- trcy_growth[,v2]
r1<-mean(r_vero[[1]])
r2<-mean(r_trcy[[1]])
feasibility <-test_feasibility(alpha,c(r1,r2))
growth      <-r2/r1
theta       <-theta(alpha,c(r1,r2))
return(c(omega,feasibility,growth,theta))
}
fixed_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
coexistence_veroBEV_trcyBEV         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
veroBEV_trcyBEV$feasibility_results <- as.factor(veroBEV_trcyBEV$feasibility_results)
fixed_veroBEV_trcyBEV               <- fixed_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
BV<-ggplot(veroBEV_trcyBEV) +
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.15, y=40, label=coexistence_veroBEV_trcyBEV, size=8)+
theme_classic()
BV
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
coexistence_veroBEV_trcyBEV         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
veroBEV_trcyBEV$feasibility_results <- as.factor(veroBEV_trcyBEV$feasibility_results)
fixed_veroBEV_trcyBEV               <- fixed_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
BV<-ggplot(veroBEV_trcyBEV) +
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence_veroBEV_trcyBEV, size=8)+
theme_classic()
BV
fixed_veroBEV_trcyBEV
BV + geom_point(fixed_veroBEV_trcyBEV, mapping = aes(x=fixed_veroBEV_trcyBEV[1],y=fixed_veroBEV_trcyBEV[4]),col="orange")
fixed_veroBEV_trcyBEV               <- as.data.frame(fixed_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV"))
fixed_veroBEV_trcyBEV
fixed_veroBEV_trcyBEV[1,]
BV + geom_point(fixed_veroBEV_trcyBEV, mapping = aes(x=fixed_veroBEV_trcyBEV[1,],y=fixed_veroBEV_trcyBEV[4,]),col="orange")
BV + geom_point(fixed_veroBEV_trcyBEV, mapping = aes(x=fixed_veroBEV_trcyBEV[1,],y=fixed_veroBEV_trcyBEV[4,]),col="orange", size=3)
BV + geom_point(fixed_veroBEV_trcyBEV, mapping = aes(x=fixed_veroBEV_trcyBEV[1,],y=fixed_veroBEV_trcyBEV[4,]),col="mintcream", size=3)
BV + geom_point(fixed_veroBEV_trcyBEV, mapping = aes(x=fixed_veroBEV_trcyBEV[1,],y=fixed_veroBEV_trcyBEV[4,]),col="gold", size=2)
st for figure regarding theta vs. omega
source("code/model_toolbox.R")
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
BEV_vero <- readRDS("~/bayesian-competition/BEV_vero.RDS")
BEV_trcy <- readRDS("~/bayesian-competition/BEV_trcy.RDS")
RC_vero  <- readRDS("~/bayesian-competition/RC_vero.RDS")
RC_trcy  <- readRDS("~/bayesian-competition/RC_trcy.RDS")
###BEV-BEV
veroBEV_trcyBEV                     <- posterior_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
coexistence_veroBEV_trcyBEV         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
veroBEV_trcyBEV$feasibility_results <- as.factor(veroBEV_trcyBEV$feasibility_results)
fixed_veroBEV_trcyBEV               <- as.data.frame(fixed_feasibility(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV"))
BV<-ggplot(veroBEV_trcyBEV) +
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence_veroBEV_trcyBEV, size=8)+
theme_classic()
BV + geom_point(fixed_veroBEV_trcyBEV, mapping = aes(x=fixed_veroBEV_trcyBEV[1,],y=fixed_veroBEV_trcyBEV[4,]),col="gold", size=2)
source("code/model_toolbox.R")
source("code/model_toolbox.R")
source("code/model_toolbox.R")
source("code/model_toolbox.R")
source("code/model_toolbox.R")
veroRC_trcyRC                      <- posterior_feasibility(RC_vero,RC_trcy,vero_growth,trcy_growth,"RC","RC")
coexistence_veroRC_trcyRC         <- sum(veroBEV_trcyBEV$feasibility_results)/nrow(veroBEV_trcyBEV)
make_figure_theta <- function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
post        <- posterior_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2)
coexistence <- sum(post$feasibility_results)/nrow(post)
post$feasibility_results <- as.factor(post$feasibility_results)
fixed_coexistence        <- as.data.frame(fixed_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2))
theta_omega <-ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence, size=8)+
theme_classic()
theta_omega_final <- theta_omega + geom_point(fixed_coexistence, mapping = aes(x=fixed_coexistence[1,],y=fixed_coexistence[4,]),col="gold", size=2)
return(theta_omega_final)
}
make_figure_theta(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
make_figure_theta <- function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
post        <- posterior_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2)
coexistence <- sum(post$feasibility_results)/nrow(post)
post$feasibility_results <- as.factor(post$feasibility_results)
fixed_coexistence        <- as.data.frame(fixed_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2))
theta_omega <-ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,40)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence, size=8)+
theme_classic()
theta_omega_final <- theta_omega + geom_point(fixed_coexistence, mapping = aes(x=fixed_coexistence[1,],y=fixed_coexistence[4,]),col="gold", size=2)
return(theta_omega_final)
}
make_figure_theta(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
make_figure_theta(RC_vero,RC_trcy,vero_growth,trcy_growth,"RC","RC")
make_figure_theta(RC_vero,BEV_trcy,vero_growth,trcy_growth,"RC","BV")
make_figure_theta <- function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
post        <- posterior_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2)
coexistence <- sum(post$feasibility_results)/nrow(post)
post$feasibility_results <- as.factor(post$feasibility_results)
fixed_coexistence        <- as.data.frame(fixed_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2))
theta_omega <-ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,60)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence, size=8)+
theme_classic()
theta_omega_final <- theta_omega + geom_point(fixed_coexistence, mapping = aes(x=fixed_coexistence[1,],y=fixed_coexistence[4,]),col="gold", size=2)
return(theta_omega_final)
}
make_figure_theta <- function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
post        <- posterior_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2)
coexistence <- sum(post$feasibility_results)/nrow(post)
post$feasibility_results <- as.factor(post$feasibility_results)
fixed_coexistence        <- as.data.frame(fixed_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2))
theta_omega <-ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,60)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence, size=8)+
theme_classic()
theta_omega_final <- theta_omega + geom_point(fixed_coexistence, mapping = aes(x=fixed_coexistence[1,],y=fixed_coexistence[4,]),col="gold", size=2)
return(theta_omega_final)
}
make_figure_theta(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
make_figure_theta(RC_vero,RC_trcy,vero_growth,trcy_growth,"RC","RC")
make_figure_theta(RC_vero,BEV_trcy,vero_growth,trcy_growth,"RC","BV")
make_figure_theta(BEV_vero,RC_trcy,vero_growth,trcy_growth,"BV","RC")
make_figure_theta <- function(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2){
col1<-rethinking::col.alpha("deepskyblue4",1)
col2<-rethinking::col.alpha("firebrick1",.3)
post        <- posterior_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2)
coexistence <- sum(post$feasibility_results)/nrow(post)
post$feasibility_results <- as.factor(post$feasibility_results)
fixed_coexistence        <- as.data.frame(fixed_feasibility(vero_model,trcy_model,vero_growth,trcy_growth,v1,v2))
theta_omega <-ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results)) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,60)   +
labs(col = "Coexistence") +
xlab("Omega (niche differences)")+
ylab("Theta (fitness differences)")+
annotate(geom="text",x=0.45, y=40, label=coexistence, size=8)+
theme_classic()
theta_omega_final <- theta_omega + geom_point(fixed_coexistence, mapping = aes(x=fixed_coexistence[1,],y=fixed_coexistence[4,]),col="gold", size=2)
return(theta_omega_final)
}
BV_BV<-make_figure_theta(BEV_vero,BEV_trcy,vero_growth,trcy_growth,"BV","BV")
RC_RC<-make_figure_theta(RC_vero,RC_trcy,vero_growth,trcy_growth,"RC","RC")
RC_BV<-make_figure_theta(RC_vero,BEV_trcy,vero_growth,trcy_growth,"RC","BV")
BV_RC<-make_figure_theta(BEV_vero,RC_trcy,vero_growth,trcy_growth,"BV","RC")
require(gridExtra)
?grid.arrange
grid.arrange(BV_BV, RC_BV,BV_RC,RC_RC)
7/1.6
cc<-function(m1,m2,m3){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
m3<-add_criterion(m3, "waic")
w<-loo_compare(m1,m2,m3,criterion="waic")
print(w)
m<-model_weights(m1,m2,m3, weights="waic")
print(m)
}
cc<-function(m1,m2){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
#  m3<-add_criterion(m3, "waic")
w<-loo_compare(m1,m2,criterion="waic")
print(w)
m<-model_weights(m1,m2, weights="waic")
print(m)
}
cc(BEV_vero,RC_vero)
cc(BEV_trcy,RC_trcy)
require(gridExtra)
source("code/model_toolbox.R")
BEV_vero <- readRDS("~/bayesian-competition/BEV_vero.RDS")
BEV_trcy <- readRDS("~/bayesian-competition/BEV_trcy.RDS")
RC_vero <- readRDS("~/bayesian-competition/RC_vero.RDS")
RC_trcy <- readRDS("~/bayesian-competition/RC_trcy.RDS")
BEV
BEV_vero
RC_vero
cc<-function(m1,m2,m3){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
#m3<-add_criterion(m3, "waic")
w<-loo_compare(m1,m2,criterion="waic")
print(w)
m<-model_weights(m1,m2,weights="waic")
print(m)
}
cc(vero_growth,trcy_growth)
cc(BEV_vero,RC_trcy)
cc(BEV_vero,RC_vero)
marginal_effects(BEV_vero)
marginal_effects(BEV_trcy)
rr<-brms::residuals(BEV_vero)
library(brms)
rr<-brms::residuals(BEV_vero)
library(brms)
brms::residuals(BEV_trcy)
