#We source everything known to human kind...
source("code/gg_theme.R")
source("code/read_models.R")
source("code/model_toolbox.R")
source("code/model_combo.R")
source("code/feasibility_toolbox.R")
#survival and germination for Vero (i) and Trcy(j)
gi<-.372
si<-.556
gj<-.258
sj<-.033
# the list of models over to iterate
vero_models <- list( vero_bh_multispecies_poisson.rds,
vero_lv_multispecies_poisson.rds,
vero_rc_multispecies_poisson.rds,
vero_hs_multispecies_poisson.rds)
trcy_models<- list(trcy_bh_multispecies_poisson.rds,
trcy_lv_multispecies_poisson.rds,
trcy_rc_multispecies_poisson.rds,
trcy_hs_multispecies_poisson.rds)
model_grid_sunny<- combined_models(vero_models = vero_models,
trcy_models = trcy_models,
si =si,
gi =gi,
gj =gj,
sj=sj,
env=FALSE)
head(model_grid_sunny)
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
?expand.grid
feasibility_grid<-expand.grid(omegas, thetas)
feasibility_grid
feasibility_grid<-matrix(expand.grid(omegas, thetas))
feasibility_grid
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(NA, nrow=length(thetas), ncol = length(omegas))
feasibility_grid
colnames(feasibility_grid) <-omegas
feasibility_grid
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
feasibility_grid
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
feasibility_grid
?match
i
i<-1
omega_i <- model_grid_sunny$omega_results[i]
omega_i
library(tidyverse)
omegas
omega_i <- model_grid_sunny$omega_results[i] %>% match(omegas)
omega_i
omega_i <- model_grid_sunny$omega_results[i]
match(omega_i,omegas)
match(omegas, omega_i)
omegas
omega_i
omega_i %in% omegas
purrr::detect(omega_i, omegas)
purrr::detect_index(omega_i, omegas)
print(match(10, c(1,12,19,10,3,11,5,10,4))
)
omegas
matc(0.2, omegas)
match(0.2, omegas)
match(0.02, omegas)
match.closest(0.02, omegas)
installed.packages("MALDIquant ")
closest<-function(xv,sv){
xv[which(abs(xv-sv)==min(abs(xv-sv)))] }
closest(0.01,omegas)
closest(omegas,0.01)
closest(omegas,0.34)
omega_i <- model_grid_sunny$omega_results[i] %>% closest(omegas)
omega_i
omega_i <- model_grid_sunny$omega_results[i]
omega_i
closest(omegas,omega_i)
model_grid<-model_grid_sunny
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
omega_i <- closest(omegas, model_grid$omega_results[i])
theta_i <- closest(thetas, model_grid$theta_results[i])
omega_i
theta_i
model_grid$theta_results[1]
omegas<- seq(0,1,0.01)
thetas<- seq(0,90, .1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
model_grid$omega_results[i]
model_grid$theta_results[i]
omega_i <- closest(omegas, model_grid$omega_results[i])
theta_i <- closest(thetas, model_grid$theta_results[i])
omega_i
theta_i
feasibility_grid
feasibility_grid[theta_i,omega_i]
feasibility_grid[,omega_i]
feasibility_grid[,0.5]
feasibility_grid[1,0.5]
feasibility_grid["1","0.5"]
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
omega_i
theta_i
feasibility_grid[theta_i,omega_i]
feasibility_grid[theta_i,omega_i] <- +1
feasibility_grid
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
feasibility_grid[theta_i,omega_i] <- +1
feasibility_grid
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
feasibility_grid[theta_i,omega_i] <- +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
feasibility_grid[theta_i,omega_i] <- +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
print(omega_i)
feasibility_grid[theta_i,omega_i] <- +1
}
return(feasibility_grid)
}
sample_grid()
one_grid<- sample_grid(model_grid_sunny)
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in 1:nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
print(omega_i)
feasibility_grid[theta_i,omega_i] <- +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in 1:nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
#print(omega_i)
feasibility_grid[theta_i,omega_i] <- +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in 1:nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
#print(omega_i)
feasibility_grid[theta_i,omega_i] <- feasibility_grid[theta_i,omega_i] +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid
heatmap(one_grid)
one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "omega")
ggplot(one_grid)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="grey80", high="black")+
geom_abline(slope = 180, intercept = 0, col="grey50")
class(one_grid)
one_grid<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "omega")
one_grid
class(one_grid)
ggplot(one_grid)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="grey80", high="black")+
geom_abline(slope = 180, intercept = 0, col="grey50")
ggplot(one_grid)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.01)
thetas<- seq(0,90, .1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in 1:nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
#print(omega_i)
feasibility_grid[theta_i,omega_i] <- feasibility_grid[theta_i,omega_i] +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "omega")
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
Omega()
Omega
feasibility_plot_sunny<-ggplot(model_grid_sunny) +
geom_point(
mapping = aes(
x = omega_results,
y = theta_results,
col = as.factor(feasibility_results)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = Theta_mean
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
geom_abline(slope = 180, intercept = 0, col="grey50")+
xlim(0,0.3)+
ylim(0, 60)+
facet_grid(trcy_model~vero_model)
col1 <- rethinking::col.alpha("mediumseagreen", .05)
col2 <- rethinking::col.alpha("grey50", .05)
feasibility_plot_sunny<-ggplot(model_grid_sunny) +
geom_point(
mapping = aes(
x = omega_results,
y = theta_results,
col = as.factor(feasibility_results)
),
show.legend = FALSE
) +
geom_point( mapping = aes(
x = Omega_mean,
y = Theta_mean
), col= "goldenrod3") +
theme_alba +
scale_color_manual(values = c(col2, col1)) +
geom_abline(slope = 180, intercept = 0, col="grey50")+
xlim(0,0.3)+
ylim(0, 60)+
facet_grid(trcy_model~vero_model)
feasibility_plot_sunny
one_grid
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "omega")
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("omega") %>%
pivot_longer(-c(theta), names_to = "theta")
quantile_range <- quantile(one_grid_vectors$value, probs = seq(0, 1, 0.01))
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
quantile_range <- quantile(one_grid_vectors$value, probs = seq(0, 1, 0.01))
one_grid_vector$quantile<-findInterval(sunny_heat_map$value, quantile_range, all.inside = TRUE)
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("omega") %>%
pivot_longer(-c(theta), names_to = "theta")
quantile_range <- quantile(one_grid_vectors$value, probs = seq(0, 1, 0.01))
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid
one_grid_vectors<-one_grid  %>% as.data.frame()
one_grid_vectors
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("omega")
one_grid_vectors
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta")
my_grid <- matrix(c(1,1.5,0.5,0),nrow=2)
my_grid
rownames(my_grid)<-c(o1,02)
rownames(my_grid)<-c("o1","o2")
colnames(my_grid)<-c("t1","t2")
my_grid
my_grid
my_grid <- matrix(c(1,1.5,0.5,0),nrow=2)
my_grid
rownames(my_grid)<-c("t1","t2")
colnames(my_grid)<-c("o1","o2")
my_grid
my_grid %>% as.data.frame()
my_grid %>% as.data.frame() %>% rownames_to_column("theta")
my_grid %>% as.data.frame() %>% rownames_to_column("theta") %>% pivot_longer(-c(theta), names_to = omega)
my_grid %>% as.data.frame() %>% rownames_to_column("theta") %>% pivot_longer(-c(theta), names_to = "omega")
ggplot(my_grid) + geom_tile(aes(x=omega,y=theta))
ggplot(my_grid) + geom_tile(aes(x=omega,y=theta))
class(my_grid)
mm<-my_grid %>% as.data.frame() %>% rownames_to_column("theta") %>% pivot_longer(-c(theta), names_to = "omega")
ggplot(mm) + geom_tile(aes(x=omega,y=theta))
ggplot(mm) + geom_tile(aes(x=omega,y=theta, fill=value))
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.1)
thetas<- seq(0,90, 1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in 1:nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
#print(omega_i)
feasibility_grid[theta_i,omega_i] <- feasibility_grid[theta_i,omega_i] +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "theta")
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "omega")
one_grid_vectors
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors
ne_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
quantile_range <- quantile(one_grid_vectors$value, probs = seq(0, 1, 0.01))
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
quantile_range <- quantile(one_grid_vectors$value, probs = seq(0, 1, 0.01))
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
sample_grid<-function(model_grid){
omegas<- seq(0,1,0.001)
thetas<- seq(0,90, .1)
feasibility_grid<-matrix(0, nrow=length(thetas), ncol = length(omegas))
colnames(feasibility_grid) <-omegas
rownames(feasibility_grid) <-thetas
for(i in 1:nrow(model_grid)){
omega_i <- closest(omegas, model_grid$omega_results[i]) %>% as.character()
theta_i <- closest(thetas, model_grid$theta_results[i]) %>% as.character()
#print(omega_i)
feasibility_grid[theta_i,omega_i] <- feasibility_grid[theta_i,omega_i] +1
}
return(feasibility_grid)
}
one_grid<- sample_grid(model_grid_sunny)
one_grid_vectors<-one_grid  %>% as.data.frame() %>%
rownames_to_column("theta") %>%
pivot_longer(-c(theta), names_to = "omega")
quantile_range <- quantile(one_grid_vectors$value, probs = seq(0, 1, 0.01))
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid
one_grid[1,]
one_grid[1,1:10]
one_grid_vectors$quantile<-findInterval(one_grid_vectors$value, quantile_range, all.inside = TRUE)
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="white", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="black", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="black", high="mediumseagreen")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quatile))+
theme_alba+
scale_fill_continuous(low="grey", high="black")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="grey", high="black")+
geom_abline(slope = 180, intercept = 0, col="grey50")
one_grid_vectors$theta <- one_grid_vectors$theta %>% as.numeric()
one_grid_vectors$omega <- one_grid_vectors$omega %>% as.numeric()
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=quantile))+
theme_alba+
scale_fill_continuous(low="grey", high="black")+
geom_abline(slope = 180, intercept = 0, col="grey50")+
xlim(0,0.3)
head(one_grid_vectors)
ggplot(one_grid_vectors)+
geom_tile(aes(x=omega, y=theta, fill=value))+
theme_alba+
scale_fill_continuous(low="grey", high="black")+
geom_abline(slope = 180, intercept = 0, col="grey50")+
xlim(0,0.3)
