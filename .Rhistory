xlim(0,40)  +
ylim(0,25)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)
xlim(0,40)  +
ylim(0,25)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
geom_point(color="red")
xlim(0,40)  +
ylim(0,25)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,25)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,10)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10, point_args=(alpha("red",1)))
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,10)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,10)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,10)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = y, y = x),
# this is the key!
data = dat,
color = "orange",
size = 4,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
#set data and priors for fitting brms models with the environment as the fixed effect.
library(brms)
source("code/clean_data.R")
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = heterospecifics),
# this is the key!
data =vero_focal ,
color = "orange",
size = 4,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
plot(bev, plot = FALSE, points=TRUE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "orange",
size = 4,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "orange",
size = 4,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 1,
alpha = .1
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 1,
alpha = .1,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,40)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10))
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics", select_points = 10)
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics")
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
rc<-marginal_effects(RC_vero ,effects = "conspecifics")
plot(rc, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Number of seeds produced")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
law<-marginal_effects(LAW_vero ,effects = "conspecifics")
plot(law, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics")
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,40)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics")
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
rc<-marginal_effects(RC_vero ,effects = "conspecifics")
plot(rc, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
bev<-marginal_effects(BEV_vero ,effects = "conspecifics")
plot(bev, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
rc<-marginal_effects(RC_vero ,effects = "conspecifics")
plot(rc, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
law<-marginal_effects(LAW_vero ,effects = "conspecifics")
plot(law, plot = FALSE)[[1]] +
theme_bw()+
geom_line(color="black", size=1)+
xlim(0,80)  +
ylim(0,20)  +
xlab("Number of conspecifics")+
ylab("Seeds produced per individual")  +
geom_point(
aes(x = conspecifics, y = totalseeds),
# this is the key!
data =vero_focal ,
color = "olivedrab",
size = 2,
alpha = .8,
# This tells it to ignore the ymin and ymax settings used elsewhere
inherit.aes = FALSE
)
plot(1:10, rnorm(10), ylim=c(0,10), yaxs="i")
plot(1:10, rnorm(10), ylim=c(0,10), yaxs="i")
plot(0, rnorm(10), ylim=c(0,10), yaxs="i")
plot(1:10, rnorm(10), ylim=c(0,10), yaxs="i")
install.packages("greta")
x <- iris$Petal.Length
y <- as_data(iris$Sepal.Length)
int <- normal(0, 10)
coef <- normal(0, 10)
sd <- student(3, 0, 10)
mean <- int + coef * x
distribution(y) <- normal(mean, sd)
m <- model(int, coef, sd)
library(greta)
x <- iris$Petal.Length
y <- as_data(iris$Sepal.Length)
?round
make_figure_theta <- function(vero_model,vero_function, vero_exp,trcy_model,trcy_function,trcy_exp,env){
col1<-rethinking::col.alpha("mediumseagreen",.3)
col2<-rethinking::col.alpha("grey50",.3)
post        <-  feasibility_wrapper(vero_model,vero_function, vero_exp,trcy_model,trcy_function,trcy_exp,env)
coexistence <- sum(post$feasibility_results)/nrow(post) %>% round (digits = 2)
mean_post <- apply(post,2,median)
post$feasibility_results <- as.factor(post$feasibility_results)
theta_omega <- ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results), show.legend = FALSE) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,95)   +
labs(col = "Coexistence") +
xlab("")+
ylab("")+
annotate(geom="text",label=coexistence, size=8,   x = .25, y = 93)+
theme_bw()
pp<-theta_omega + geom_point(mapping= aes(x= mean_post[1], y=mean_post[3]), col= "goldenrod", size=3)
return(pp)
}
source("code/theta_figure.R")
BEV_vero <- readRDS("~/bayesian-competition/BEV_vero.RDS")
BEV_trcy <- readRDS("~/bayesian-competition/BEV_trcy.RDS")
RC_vero <- readRDS("~/bayesian-competition/RC_vero.RDS")
RC_trcy <- readRDS("~/bayesian-competition/RC_trcy.RDS")
LAW_vero <- readRDS("~/bayesian-competition/LAW_vero.RDS")
LAW_trcy <- readRDS("~/bayesian-competition/LAW_trcy.RDS")
#BEVERTON HOLT - BEVERTON HOLT
#
BEV_BEV_0 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
BEV_BEV_0
make_figure_theta_nice <- function(vero_model,vero_function, vero_exp,trcy_model,trcy_function,trcy_exp,env){
col1<-rethinking::col.alpha("mediumseagreen",.3)
col2<-rethinking::col.alpha("grey50",.3)
post        <-  feasibility_wrapper(vero_model,vero_function, vero_exp,trcy_model,trcy_function,trcy_exp,env)
coexistence <- sum(post$feasibility_results)/nrow(post)
coexistence <- round(coexistence, digits = 2)
mean_post <- apply(post,2,median)
post$feasibility_results <- as.factor(post$feasibility_results)
theta_omega <- ggplot(post)+
geom_point(mapping = aes(x=omega_results,y=theta_results, col= feasibility_results), show.legend = FALSE) +
scale_color_manual(values = c(col2,col1)) +
xlim(0,0.5)  +
ylim(0,25)   +
labs(col = "Coexistence") +
xlab("")+
ylab("")+
annotate(geom="text",label=coexistence, size=8,   x = .25, y = 23)+
theme_bw()
pp<-theta_omega + geom_point(mapping= aes(x= mean_post[1], y=mean_post[3]), col= "goldenrod", size=3)
return(pp)
}
BEV_BEV_n <-make_figure_theta_nice(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
source("code/theta_figure.R")
BEV_vero <- readRDS("~/bayesian-competition/BEV_vero.RDS")
BEV_trcy <- readRDS("~/bayesian-competition/BEV_trcy.RDS")
RC_vero <- readRDS("~/bayesian-competition/RC_vero.RDS")
RC_trcy <- readRDS("~/bayesian-competition/RC_trcy.RDS")
LAW_vero <- readRDS("~/bayesian-competition/LAW_vero.RDS")
LAW_trcy <- readRDS("~/bayesian-competition/LAW_trcy.RDS")
BEV_BEV_n <-make_figure_theta_nice(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
# figures for presentation
source("code/theta_figure.R")
BEV_BEV_n <-make_figure_theta_nice(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
BEV_BEV_n
cc<-function(m1,m2,m3){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
m3<-add_criterion(m3, "waic")
w<-loo_compare(m1,m2,m3,criterion="waic")
print(w)
m<-model_weights(m1,m2,m3,weights="waic")
print(m)
}
cc(BEV_vero,RC_trcy)
cc(BEV_vero,RC_trcy, LAW_vero)
BEV_vero
RC_vero
LAW_vero
cc(BEV_vero,RC_trcy, BEV_vero)
cc(BEV_vero, BEV_vero, BEV_vero)
cc(BEV_vero, LAW_vero, BEV_vero)
cc(BEV_vero, RC_vero, BEV_vero)
cc(BEV_vero, RC_vero, LAW_vero)
cc(BEV_trcy, RC_trcy, LAW_trcy)
#
BEV_BEV_0 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
BEV_BEV_1 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 1)
##  RICKER - BEVERTON HOLT
RC_BEV_0 <-make_figure_theta(vero_model =  RC_vero, vero_function = ricker_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
RC_BEV_1 <-make_figure_theta(vero_model =  RC_vero, vero_function = ricker_growth, vero_exp = 0 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 1)
#BEVERTON  HOLT - RICKER
BEV_RC_0 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = RC_trcy, trcy_function = ricker_growth, trcy_exp = 0, env = 0)
BEV_RC_1 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = RC_trcy, trcy_function = ricker_growth, trcy_exp = 0, env = 1)
##  RICKER - RICKER
RC_RC_0 <-make_figure_theta(vero_model =  RC_vero, vero_function = ricker_growth, vero_exp = 0 , trcy_model = RC_trcy, trcy_function = ricker_growth, trcy_exp = 0, env = 0)
RC_RC_1 <-make_figure_theta(vero_model =  RC_vero, vero_function = ricker_growth, vero_exp = 0 , trcy_model = RC_trcy, trcy_function = ricker_growth, trcy_exp = 0, env = 1)
##### LAW - BEVERTON HOLT
LAW_BEV_0 <-make_figure_theta(vero_model =  LAW_vero, vero_function = law_growth, vero_exp = 1 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 0)
LAW_BEV_1 <-make_figure_theta(vero_model =  LAW_vero, vero_function = law_growth, vero_exp = 1 , trcy_model = BEV_trcy, trcy_function = bev_growth, trcy_exp = 0, env = 1)
#### LAW - RICKER
LAW_RC_0 <-make_figure_theta(vero_model =  LAW_vero, vero_function = law_growth, vero_exp = 1 , trcy_model = RC_trcy, trcy_function = ricker_growth, trcy_exp = 0, env = 0)
LAW_RC_1 <-make_figure_theta(vero_model =  LAW_vero, vero_function = law_growth, vero_exp = 1 , trcy_model = RC_trcy, trcy_function = ricker_growth, trcy_exp = 0, env = 1)
##### BEVERTON -LAw
BEV_LAW_0 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = LAW_trcy, trcy_function = law_growth, trcy_exp = 1, env = 0)
BEV_LAW_1 <-make_figure_theta(vero_model =  BEV_vero, vero_function = bev_growth, vero_exp = 0 , trcy_model = LAW_trcy, trcy_function = law_growth, trcy_exp = 1, env = 1)
##  RICKER - LAW
RC_LAW_0 <-make_figure_theta(vero_model =  RC_vero, vero_function = ricker_growth, vero_exp = 0 , trcy_model = LAW_trcy, trcy_function = law_growth, trcy_exp = 1, env = 0)
RC_LAW_1 <-make_figure_theta(vero_model =  RC_vero, vero_function = ricker_growth, vero_exp = 0 , trcy_model = LAW_trcy, trcy_function = law_growth, trcy_exp = 1, env = 1)
########### LAW - LAW
LAW_LAW_0 <-make_figure_theta(vero_model =  LAW_vero, vero_function = law_growth, vero_exp = 1 , trcy_model = LAW_trcy, trcy_function = law_growth, trcy_exp = 1, env = 0)
LAW_LAW_1 <-make_figure_theta(vero_model =  LAW_vero, vero_function = law_growth, vero_exp = 1 , trcy_model = LAW_trcy, trcy_function = law_growth, trcy_exp = 1, env = 1)
pdf(file="omega_multi_model.pdf", width = 14)
grid.arrange(BEV_BEV_0, RC_BEV_0, LAW_BEV_0,
BEV_RC_0,  RC_RC_0,  LAW_RC_0,
BEV_LAW_0, RC_LAW_0, LAW_LAW_0,
ncol=3, nrow=3)
dev.off()
LAW_vero
plot(LAW_vero)
cc(BEV_vero, RC_vero, LAW_vero)
cc(BEV_trcy, RC_trcy, LAW_trcy)
getwd()
setwd("/home/alba/bayesian-competition/scripts")
