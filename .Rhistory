BEV_trcy_zip <- readRDS("~/bayesian-competition/model_objects/BEV_trcy_zip.RDS")
plot(BEV_trcy_zip)
plot(BEV_trcy_zip)
RC_vero_zip <- readRDS("~/bayesian-competition/model_objects/RC_vero_zip.RDS")
RC_trcy_zip <- readRDS("~/bayesian-competition/model_objects/RC_trcy_zip.RDS")
plot(RC_trcy_zip)
plot(RC_vero_zip)
plot(RC_vero_zip)
#Ricker models for VERO vs TRCY
library(brms)
source("code/models/set_priors.R")
source("code/clean_data.R")
RC_trcy <- readRDS("~/bayesian-competition/model_objects/RC_trcy.RDS")
BEV_trcy <- readRDS("~/bayesian-competition/model_objects/BEV_trcy.RDS")
c2<-function(m1,m2){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
w<-loo_compare(m1,m2,criterion="waic")
print(w)
m<-model_weights(m1,m2,weights="waic")
print(m)
}
c2(BEV_trcy,RC_trcy)
library(brms)
source("code/clean_data.R")
source("code/models/set_priors.R")
source("code/models/model_formulas.R")
library(brms)
source("code/clean_data.R")
library(brms)
source("code/clean_data.R")
#we remove trcy just to be sure
rm(trcy_focal)
source("code/models/set_priors.R")
source("code/models/model_formulas.R")
vero_beverton_pairs_zip <- brm(
formula = beverton_holt_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_beverton_pairs_zip)
vero_beverton_pairs_zip<-add_criterion(vero_beverton_pairs_zip, criterion = "waic")
vero_beverton_pairs_zip<-add_criterion(vero_beverton_pairs_zip, criterion = "loo")
vero_beverton_pairs_zip<-add_criterion(vero_beverton_pairs_zip, criterion = "loo", moment_match=TRUE)
saveRDS(vero_beverton_pairs_zip, file = "model_objects/vero_beverton_pairs_zip.RDS")
vero_beverton_multi_zip <- brm(
formula = beverton_holt_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_beverton_multi_zip<-add_criterion(vero_beverton_pairs_zip, criterion = "waic")
vero_beverton_multi_zip<-add_criterion(vero_beverton_pairs_zip, criterion = "loo", moment_match=TRUE)
saveRDS(vero_beverton_multi_zip, file = "model_objects/vero_beverton_multi_zip.RDS")
c2<-function(m1,m2){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
w<-loo_compare(m1,m2,criterion="waic")
print(w)
m<-model_weights(m1,m2,weights="waic")
print(m)
}
cc(vero_beverton_pairs_zip,vero_beverton_pairs_zip)
c2(vero_beverton_pairs_zip,vero_beverton_pairs_zip)
c2(vero_beverton_pairs_zip,vero_beverton_multi_zip)
c2(vero_beverton_pairs_zip,vero_beverton_multi_zip)
plot(vero_beverton_multi_zip)
plot(vero_beverton_multi_zip
)
beverton_holt_multi
beverton_holt_pairs
vero_beverton_multi_zip <- brm(
formula = beverton_holt_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_beverton_multi_zip<-add_criterion(vero_beverton_multi_zip, criterion = "waic")
vero_beverton_multi_zip<-add_criterion(vero_beverton_multi_zip, criterion = "loo", moment_match=TRUE)
saveRDS(vero_beverton_multi_zip, file = "model_objects/vero_beverton_multi_zip.RDS")
vero_beverton_multi_zip <- brm(
formula = beverton_holt_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
save_all_pars = TRUE,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_beverton_multi_zip)
vero_beverton_multi_zip <- brm(
formula = beverton_holt_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 1,
inits   = 1 ,
save_all_pars = TRUE,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_beverton_pairs_zip)
plot(vero_beverton_multi_zip)
vero_beverton_multi_zip <- brm(
formula = beverton_holt_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
save_all_pars = TRUE,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_beverton_multi_zip<-add_criterion(vero_beverton_multi_zip, criterion = "waic")
cc(vero_beverton_multi_zip,vero_beverton_pairs_zip)
c2(vero_beverton_multi_zip,vero_beverton_pairs_zip)
saveRDS(vero_beverton_multi_zip, file = "model_objects/vero_beverton_multi_zip.RDS")
vero_ricker_pairs_zip <- brm(
formula = ricker_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_ricker_pairs_zip
vero_ricker_pairs_zip <- add_criterion(vero_ricker_pairs_zip, criterion = "waic")
saveRDS(vero_ricker_pairs_zip, file ="model_objects/vero_ricker_pairs_zip.RDS")
plot(vero_ricker_pairs_zip)
vero_ricker_multi_zip <- brm(
formula = ricker_multi,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_ricker_multi_zip <- brm(
formula = ricker_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_ricker_pairs_zip)
c2(vero_ricker_pairs_zip,vero_ricker_multi_zip)
vero_ricker_multi_zip <- add_criterion(vero_ricker_multi_zip, criterion = "waic")
saveRDS(vero_ricker_multi_zip, file ="model_objects/vero_ricker_multi_zip.RDS")
vero_hassel_pairs_zip <- brm(
formula = hassell_pairs,
prior = prior_exp_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_hassel_pairs_zip)
vero_hassell_pairs_zip <- add_criterion(vero_hassell_pairs_zip, criterion = "waic")
saveRDS(vero_ricker_pairs_zip, file ="model_objects/vero_ricker_pairs_zip.RDS")
vero_hassel_multi_zip <- brm(
formula = hassell_multi,
prior = prior_exp_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_hassel_multi_zip)
prior_exp_multi = c(
prior(normal(0, 10), nlpar = "alphaii"),
prior(normal(0, 10), nlpar = "alphaij"),
prior(normal(0, 10), nlpar = "lambda"),
prior(normal(1, 0), nlpar = "beta"),
prior(normal(0, 10), nlpar = "alphaik")
)
vero_hassel_multi_zip <- brm(
formula = hassell_multi,
prior = prior_exp_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_hassel_multi_zip <- brm(
formula = hassell_multi,
prior = prior_exp_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 1,
control = list(adapt_delta = .99, max_treedepth=13)
)
prior_exp_multi = c(
prior(normal(0, 10), nlpar = "alphaii"),
prior(normal(0, 10), nlpar = "alphaij"),
prior(normal(0, 10), nlpar = "lambda"),
prior(normal(0, 10), nlpar = "beta"),
prior(normal(0, 10), nlpar = "alphaik")
)
vero_hassel_multi_zip <- brm(
formula = hassell_multi,
prior = prior_exp_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 1,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_lotka_pairs_zip <- brm(formula = lotka_volterra_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_hassel_multi_zip <- brm(
formula = hassell_multi,
prior = prior_exp_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits = 1,
control = list(adapt_delta = .99, max_treedepth=13)
)
lotka_volterra_multi<-bf(
totalseeds~  exp(lambda) * (1 - (alphaii*conspecifics) - (alphaij*heterospecifics) - (alphaik*totalother))  ,
lambda  ~ 1 + env,
alphaii ~ 1 + env,
alphaik ~ 1 + env,
alphaij ~ 1 + env,
nl=T)
vero_lotka_multi_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits = 1,
control = list(adapt_delta = .99, max_treedepth=13)
)
prior_pairs = c(
prior(normal(0, 10), nlpar = "alphaii"),
prior(normal(0, 10), nlpar = "alphaij"),
prior(normal(0, 10), nlpar = "lambda")
)
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits = 1,
control = list(adapt_delta = .99, max_treedepth=13)
)
lotka_volterra_pairs<-bf(
totalseeds~  exp(lambda) * (1 - (alphaii*conspecifics) - (alphaij*heterospecifics) )  ,
lambda  ~ 1 + env,
alphaii ~ 1 + env,
alphaij ~ 1 + env,
nl=T)
lotka_volterra_pairs<-bf(
totalseeds~  exp(lambda) * (1 - (alphaii*conspecifics) - (alphaij*heterospecifics) )  ,
lambda  ~ 1 + env,
alphaii ~ 1 + env,
alphaij ~ 1 + env,
nl=T)
###Model fits for species vero
library(brms)
source("code/clean_data.R")
#we remove trcy just to be sure
rm(trcy_focal)
source("code/models/set_priors.R")
source("code/models/model_formulas.R")
vero_beverton_pairs_zip <- brm(
formula = beverton_holt_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
lotka_volterra_pairs<-bf(
totalseeds~  exp(lambda) * (1 - (alphaii*conspecifics) - (alphaij*heterospecifics) ),
lambda  ~ 1 + env,
alphaii ~ 1 + env,
alphaij ~ 1 + env,
nl=T)
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
plot(vero_lotka_pairs_zip)
vero_lotka_pairs_zip <- add_criterion( vero_lotka_pairs_zip, criterion="waic")
saveRDS(vero_lotka_multi_zip, file ="model_objects/vero_lotka_multi_zip.RDS")
vero_lotka_pairs_zip <- add_criterion( vero_lotka_pairs_zip, criterion="waic")
saveRDS(vero_lotka_pairs_zip, file ="model_objects/vero_lotka_pairs_zip.RDS")
library(brms)
source("code/clean_data.R")
#we remove trcy just to be sure
rm(trcy_focal)
source("code/models/set_priors.R")
source("code/models/model_formulas.R")
vero_lotka_pairs_zip <- brm(
formula = lotka_volterra_pairs,
prior = prior_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
vero_lotka_multi_zip <- brm(
formula = lotka_volterra_multi,
prior = prior_multi,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 4000,
warmup = 2000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=13)
)
library(brms)
c2<-function(m1,m2){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
w<-loo_compare(m1,m2,criterion="waic")
print(w)
m<-model_weights(m1,m2,weights="waic")
print(m)
}
vero_beverton_multi_zip <- readRDS("~/bayesian-competition/model_objects/vero_beverton_multi_zip.RDS")
vero_beverton_pairs_zip <- readRDS("~/bayesian-competition/model_objects/vero_beverton_pairs_zip.RDS")
vero_beverton_multi_zip
vero_beverton_pairs_zip
c2(vero_beverton_multi_zip,vero_beverton_pairs_zip)
plot(vero_beverton_pairs_zip)
plot(vero_beverton_multi_zip)
vero_ricker_pairs_zip <- readRDS("~/bayesian-competition/model_objects/vero_ricker_pairs_zip.RDS")
vero_ricker_multi_zip <- readRDS("~/bayesian-competition/model_objects/vero_ricker_multi_zip.RDS")
vero_ricker_pairs_zip
vero_ricker_multi_zip <- readRDS("~/bayesian-competition/model_objects/vero_ricker_multi_zip.RDS")
vero_ricker_multi_zip
plot(vero_ricker_pairs_zip)
plot(vero_ricker_multi_zip)
c2(vero_ricker_multi_zip,vero_ricker_pairs_zip)
c2<-function(m1,m2){
m1<-add_criterion(m1, "waic")
m2<-add_criterion(m2, "waic")
w<-loo_compare(m1,m2,criterion="waic")
print(w)
m<-model_weights(m1,m2,weights="waic")
print(m)
}
c2(vero_ricker_multi_zip,vero_ricker_pairs_zip)
vero_beverton_multi_zip <- readRDS("~/bayesian-competition/model_objects/vero_beverton_multi_zip.RDS")
c2(vero_ricker_multi_zip,vero_beverton_multi_zip)
###Model fits for species vero
library(brms)
source("code/clean_data.R")
#we remove trcy just to be sure
rm(trcy_focal)
source("code/models/set_priors.R")
source("code/models/model_formulas.R")
vero_hassel_pairs_zip <- brm(
formula = hassell_pairs,
prior = prior_exp_pairs,
data = vero_focal,
family = zero_inflated_poisson(link = "identity"),
iter = 8000,
warmup = 4000,
cores   = 4,
chains  = 4,
inits   = 1 ,
control = list(adapt_delta = .99, max_treedepth=15)
)
plot(vero_hassel_pairs_zip)
vero_hassell_pairs_zip <- add_criterion(vero_hassell_pairs_zip, criterion = "waic")
saveRDS(vero_ricker_pairs_zip, file ="model_objects/vero_ricker_pairs_zip.RDS")
